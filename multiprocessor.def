DEFINITION MODULE multiprocessor ;

(*
    Title      : multiprocessor
    Author     : Gaius Mulley
    System     : GNU Modula-2
    Date       : Fri Apr 17 10:54:29 2020
    Revision   : $Version$
    Description: provides a very simple interface to process exit codes
                 and some of the multiprocessor attributes of a GNU/Linux
                 system.
*)

FROM SYSTEM IMPORT ADDRESS ;

TYPE
   SEMAPHORE = ADDRESS ;


(*
   maxProcessors - return the number of processors available.
*)

PROCEDURE maxProcessors () : INTEGER ;


(*
   fork - standard libc fork.
*)

PROCEDURE fork () : INTEGER ;


(*
   rand - returns a random integer.
*)

PROCEDURE rand () : INTEGER ;


(*
   initSem - initialise and return a POSIX semaphore.
*)

PROCEDURE initSem (value: CARDINAL) : SEMAPHORE ;


(*
   killSem - deallocate a POSIX semaphore.
*)

PROCEDURE killSem (sem: SEMAPHORE) ;


(*
   wait -
*)

PROCEDURE wait (sem: SEMAPHORE) ;


(*
   signal -
*)

PROCEDURE signal (sem: SEMAPHORE) ;


(*
   adjust - while value < 0 wait ; value++
            while value > 0 signal ; value--
*)

PROCEDURE adjust (sem: SEMAPHORE; value: INTEGER) ;


(*
   initSharedMemory - should only be called once.  It initialises the
                      shared memory used by the semaphores and also
                      allocates memsize extra bytes.  It returns the
                      address of the extra memory (placed after the
                      semaphores).
*)

PROCEDURE initSharedMemory (memsize: CARDINAL) : ADDRESS ;


END multiprocessor.
